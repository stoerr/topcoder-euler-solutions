
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class MagicFingerprint {
    public int countLuckyNumbers(int A, int B) {
        int res = 0;
        for (int i = A; i <= B; ++i) {
            int m = Math.abs(i);
            while (m > 9) {
                m = smagic(m);
            }
            if (7 == m) res++;
        }
        return res;
    }

    private int smagic(int n) {
        int m=0;
        int f=1;
        while(10*f<n) {
            int f1 = 10*f;
            int d1=n/f%10;
            int d2=n/f1%10;
            int d = Math.abs(d1-d2);
            m += d*f;
            f*=10;
        }
        return m;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1,
            boolean hasAnswer, int p2) {
        System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
        System.out.println("]");
        MagicFingerprint obj;
        int answer;
        obj = new MagicFingerprint();
        long startTime = System.currentTimeMillis();
        answer = obj.countLuckyNumbers(p0, p1);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0
                + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p2);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p2;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int p0;
        int p1;
        int p2;

        // ----- test 0 -----
        p0 = 1;
        p1 = 9;
        p2 = 1;
        all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = 1;
        p1 = 100;
        p2 = 6;
        all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = 1198;
        p1 = 1198;
        p2 = 1;
        all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = 1223;
        p1 = 1299;
        p2 = 0;
        all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = 999999930;
        p1 = 1000000000;
        p2 = 2;
        all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
        // ------------------

        // ----- test 5 -----
        p0 = 100000;
        p1 = 1000000000;
        p2 = 159720;
        all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
        // ------------------

        if (all_right) {
            System.out
                    .println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!

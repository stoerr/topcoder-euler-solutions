import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class PrimeSums {
    public long getCount(int[] bag) {
        Arrays.sort(bag);
        return count(0, bag, 0);
    }

    private long count(int i, int[] bag, long offset) {
        if (i>=bag.length) return isPrime(offset);
        final int num = bag[i];
        int cnt = 0;
        while (i<bag.length && num == bag[i]) {
            ++i;
            ++cnt;
        }
        long res = 0;
        for (int j=0; j<=cnt; ++j) {
            res += count(i,bag, offset+j*num);
        }
        return res;
    }

    private long isPrime(long n) {
        if (2 > n) return 0;
        if (2 == n || 3 == n) return 1;
        double sqrt = Math.sqrt(n)+1;
        for (int i=2; i<sqrt; ++i) {
            if (0 == n%i) return 0;
        }
        return 1;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0,
            boolean hasAnswer, long p1) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}");
        System.out.println("]");
        PrimeSums obj;
        long answer;
        obj = new PrimeSums();
        long startTime = System.currentTimeMillis();
        answer = obj.getCount(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0
                + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p1);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p1;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int[] p0;
        long p1;

        // ----- test 0 -----
        p0 = new int[] { 1, 1, 2, 7 };
        p1 = 5L;
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
        p1 = 4L;
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = new int[] { 4, 6, 8, 10, 12, 14 };
        p1 = 0L;
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = new int[] { 1, 2, 4, 8, 16, 32, 64, 128 };
        p1 = 54L;
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = new int[] { 1234, 5678, 9012, 3456, 7890, 2345, 6789, 123, 4567,
                8901 };
        p1 = 97L;
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------

        // ----- test 5 -----
        p0 = new int[] { 0, 0, 7 };
        p1 = 3L;
        all_right = KawigiEdit_RunTest(5, p0, true, p1) && all_right;
        // ------------------

        if (all_right) {
            System.out
                    .println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!

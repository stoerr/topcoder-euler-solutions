
import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class Predicting
{
	public double avgError(double[] data)
	{
		double res = 1e20D;
		for (double x1 = -1.0D; x1<=1.0D; x1 += 0.1D) {
			for (double x2 = -1.0D; x2<=1.0D; x2 += 0.1D) {
				for (double x3 = -1.0D; x3<=1.0D; x3 += 0.1D) {
					for (double x4 = -1.0D; x4<=1.0D; x4 += 0.1D) {
						double x5 = 1.0D-x1-x2-x3-x4;
						if (x5 <=1.0D && x5 >= -1.0D) {
							double avg = avg(data, x1, x2, x3, x4, x5);
							if (avg < res) res = avg;
						}
					}
				}
			}
		}
		return res;
	}
	
	double avg(double d[], double x1, double x2, double x3, double x4, double x5) {
		double error = 0;
		for (int i=5; i<d.length; ++i) {
			double a = d[i] - x1*d[i-1] - x2*d[i-2] - x3*d[i-3] - x4*d[i-4] - x5*d[i-5];
			error += Math.abs(a);
		}
		return error/(d.length-5);
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, double[] p0, boolean hasAnswer, double p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		Predicting obj;
		double answer;
		obj = new Predicting();
		long startTime = System.currentTimeMillis();
		answer = obj.avgError(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p1 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p1));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		double[] p0;
		double p1;
		
		// ----- test 0 -----
		p0 = new double[]{10D,10D,10D,10D,10D,10D};
		p1 = 0.0D;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new double[]{50D,10D,50D,10D,50D,10D,50D,10D,50D,10D,50D,10D};
		p1 = 0.0D;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new double[]{50D,60D,50D,60D,50D,60D,60D};
		p1 = 5.0D;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new double[]{82.9102D,70.6848D,21.503D,61.4588D,54.7789D,48.9889D,57.6766D,91.1859D,26.3674D,55.4601D,53.9357D,87.2005D,78.4771D,65.0102D,18.619D,90.296D,26.3894D,53.8588D,91.8369D,58.8028D,74.0577D,28.2406D,65.609D,59.4867D,27.7544D,54.6992D,69.2428D,22.6264D,87.0083D,58.5116D,60.286D,20.4318D,65.6475D,11.8348D,36.3488D,92.8092D,60.7392D,98.124D,48.1292D,39.5459D,52.2657D,34.3519D,38.9279D,93.0152D,11.3157D};
		p1 = 22.0175905D;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!

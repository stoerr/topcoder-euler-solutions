import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;

public class MultiNumber {
    public String check(int number) {
        if (1<number && multi(number))
            return "YES";
        return "NO";
    }

    private boolean multi(int number) {
        String s = String.valueOf(number);
        int allmult = 1;
        for (int i=0; i<s.length(); ++i) {
            allmult *= s.charAt(i) - '0';
        }
        int root = (int) Math.round(Math.sqrt(allmult));
        if (allmult != root*root) return false;
        int consec = 1;
        for (int i=0; i<s.length(); ++i) {
            consec *= s.charAt(i) - '0';
            if (root == consec) return true;
        }
        return false;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
    private static boolean KawigiEdit_RunTest(int testNum, int p0,
            boolean hasAnswer, String p1) {
        System.out.print("Test " + testNum + ": [" + p0);
        System.out.println("]");
        MultiNumber obj;
        String answer;
        obj = new MultiNumber();
        long startTime = System.currentTimeMillis();
        answer = obj.check(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0
                + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + "\"" + p1 + "\"");
        }
        System.out.println("Your answer:");
        System.out.println("\t" + "\"" + answer + "\"");
        if (hasAnswer) {
            res = answer.equals(p1);
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        all_right = true;

        int p0;
        String p1;

        // ----- test 0 -----
        p0 = 1;
        p1 = "NO";
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------

        // ----- test 1 -----
        p0 = 1221;
        p1 = "YES";
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------

        // ----- test 2 -----
        p0 = 1236;
        p1 = "YES";
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------

        // ----- test 3 -----
        p0 = 4729382;
        p1 = "NO";
        all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
        // ------------------

        // ----- test 4 -----
        p0 = 42393338;
        p1 = "YES";
        all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
        // ------------------

        if (all_right) {
            System.out
                    .println("You're a stud (at least on the example cases)!");
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
